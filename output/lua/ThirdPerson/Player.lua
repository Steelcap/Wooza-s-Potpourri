function Player:NeedsCrosshairOverride()  return falseend-- this is the direction you're aiming in (for if your camera doesn't line up with weapon)function Player:GetLookingCoords()  return self:GetViewCoords()endlocal origOnJoinTeam = Player.OnJoinTeamfunction Player:OnJoinTeam()    origOnJoinTeam(self)    -- NOTE this is here just to fix shine. It shouldn't be needed    self:SetCameraDistance(0)endlocal originalAdjustAngles = Player.AdjustAnglesfunction Player:AdjustAngles(deltaTime)    local angles = self:GetAngles()    AnglesTo2PiRange(angles)    local desiredAngles = self:GetDesiredAngles(deltaTime)    AnglesTo2PiRange(desiredAngles)    local smoothMode = self:GetAngleSmoothingMode()        if desiredAngles == nil then        -- Just keep the old angles    elseif smoothMode == "euler" then                angles.yaw = SlerpRadians(angles.yaw, desiredAngles.yaw, self:GetAngleSmoothRate() * deltaTime )        angles.roll = SlerpRadians(angles.roll, desiredAngles.roll, self:GetRollSmoothRate() * deltaTime )        angles.pitch = SlerpRadians(angles.pitch, desiredAngles.pitch, self:GetPitchSmoothRate() * deltaTime )            elseif smoothMode == "quatlerp" then        --DebugDrawAngles( angles, self:GetOrigin(), 2.0, 0.5 )        --Print("pre slerp = %s", ToString(angles))         -- this is not actually doing a slerp at all, but it should        angles.yaw = math.atan2(math.sin(angles.yaw), math.cos(angles.yaw))        desiredAngles.yaw = math.atan2(math.sin(desiredAngles.yaw), math.cos(desiredAngles.yaw))        angles = Angles.Lerp(angles, desiredAngles, self:GetSlerpSmoothRate()*deltaTime )    else                angles.pitch = desiredAngles.pitch        angles.roll = desiredAngles.roll        angles.yaw = desiredAngles.yaw    end        AnglesTo2PiRange(angles)    self:SetAngles(angles)end