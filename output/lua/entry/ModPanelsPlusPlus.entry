modEntry = {
	FileHooks = "lua/ModPanelsPlusPlus/FileHooks.lua",
	Shared    = "lua/ModPanelsPlusPlus/Shared.lua"
}

kModPanels = {}

local dot = string.byte('.')
local slash = string.byte('/')

local function name_from_material(path)
	local stop
	for i = #path, 1, -1 do
		if path:byte(i) == dot then
			stop = i-1
		elseif path:byte(i) == slash then
			return path:sub(i+1, stop)
		end
	end
	return path:sub(1, stop)
end

function AddModPanel(values, maybe_url)
	assert(#kModPanels < 255, "Can not add more mod panels! Max: 255")
	if type(values) == "string" then
		values = {
			material = values,
			url      = maybe_url
		}
	end
	assert(values.material, "Material file required!")
	if not values.name then
		values.name = name_from_material(values.material)
	end
	PrecacheAsset(values.material)
	table.insert(kModPanels, values)
end

local quickload = {}
Shared.GetMatchingFileNames("lua/quickload/*.lua", true, quickload)
for _, file in ipairs(quickload) do
	ModLoader.SetupFileHook("lua/Class.lua", file, "post")
end
